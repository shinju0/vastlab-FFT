// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FFT_DIT_RN_FFT_DIT_RN_Pipeline_VITIS_LOOP_764_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_din,
        out_r_full_n,
        out_r_write,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_q0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [255:0] out_r_din;
input   out_r_full_n;
output   out_r_write;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_q0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0;
input  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_q0;

reg ap_idle;
reg out_r_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [0:0] icmp_ln764_fu_175_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    out_r_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg   [0:0] icmp_ln764_reg_262;
wire    ap_block_pp0_stage1_11001;
wire   [6:0] add_ln764_fu_181_p2;
reg   [6:0] add_ln764_reg_266;
wire   [255:0] p_0_fu_235_p9;
reg   [255:0] p_0_reg_311;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln764_fu_187_p1;
wire    ap_block_pp0_stage1;
reg   [6:0] i_fu_52;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
wire    ap_loop_init;
reg    ap_block_pp0_stage0_01001_grp1;
reg    ap_block_pp0_stage0_11001_grp1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local;
wire   [31:0] bitcast_ln765_7_fu_231_p1;
wire   [31:0] bitcast_ln765_6_fu_227_p1;
wire   [31:0] bitcast_ln765_5_fu_223_p1;
wire   [31:0] bitcast_ln765_4_fu_219_p1;
wire   [31:0] bitcast_ln765_3_fu_215_p1;
wire   [31:0] bitcast_ln765_2_fu_211_p1;
wire   [31:0] bitcast_ln765_1_fu_207_p1;
wire   [31:0] bitcast_ln765_fu_203_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_334;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_52 = 7'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_DIT_RN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_52 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i_fu_52 <= add_ln764_reg_266;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln764_reg_266 <= add_ln764_fu_181_p2;
        icmp_ln764_reg_262 <= icmp_ln764_fu_175_p2;
        p_0_reg_311 <= p_0_fu_235_p9;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln764_fu_175_p2 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln764_reg_262 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_r_blk_n = out_r_full_n;
    end else begin
        out_r_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_r_write = 1'b1;
    end else begin
        out_r_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0 = zext_ln764_fu_187_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local;

assign add_ln764_fu_181_p2 = (i_fu_52 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = ((out_r_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((out_r_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((out_r_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_334 = ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_ready = ap_ready_sig;

assign bitcast_ln765_1_fu_207_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_q0;

assign bitcast_ln765_2_fu_211_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_q0;

assign bitcast_ln765_3_fu_215_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_q0;

assign bitcast_ln765_4_fu_219_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_q0;

assign bitcast_ln765_5_fu_223_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_q0;

assign bitcast_ln765_6_fu_227_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_q0;

assign bitcast_ln765_7_fu_231_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_q0;

assign bitcast_ln765_fu_203_p1 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_q0;

assign icmp_ln764_fu_175_p2 = ((i_fu_52 == 7'd64) ? 1'b1 : 1'b0);

assign out_r_din = p_0_reg_311;

assign p_0_fu_235_p9 = {{{{{{{{bitcast_ln765_7_fu_231_p1}, {bitcast_ln765_6_fu_227_p1}}, {bitcast_ln765_5_fu_223_p1}}, {bitcast_ln765_4_fu_219_p1}}, {bitcast_ln765_3_fu_215_p1}}, {bitcast_ln765_2_fu_211_p1}}, {bitcast_ln765_1_fu_207_p1}}, {bitcast_ln765_fu_203_p1}};

assign zext_ln764_fu_187_p1 = i_fu_52;

endmodule //FFT_DIT_RN_FFT_DIT_RN_Pipeline_VITIS_LOOP_764_2
