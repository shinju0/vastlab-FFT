// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FFT_DIT_RN_FFT_DIT_RN_Pipeline_VITIS_LOOP_757_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mid_dout,
        mid_empty_n,
        mid_read,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_d0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0,
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [255:0] mid_dout;
input   mid_empty_n;
output   mid_read;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_d0;
output  [5:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0;
output   FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0;
output  [31:0] FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_d0;

reg ap_idle;
reg mid_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [0:0] icmp_ln757_fu_202_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mid_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg   [6:0] i_2_reg_342;
wire    ap_block_pp0_stage1_11001;
wire   [6:0] add_ln757_fu_208_p2;
reg   [6:0] add_ln757_reg_350;
wire   [31:0] trunc_ln758_fu_214_p1;
reg   [31:0] trunc_ln758_reg_355;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [31:0] trunc_ln758_2_reg_360;
reg   [31:0] trunc_ln758_3_reg_365;
reg   [31:0] trunc_ln758_4_reg_370;
reg   [31:0] trunc_ln758_5_reg_375;
reg   [31:0] trunc_ln758_6_reg_380;
reg   [31:0] trunc_ln758_7_reg_385;
reg   [31:0] trunc_ln758_8_reg_390;
wire   [63:0] zext_ln757_fu_292_p1;
wire    ap_block_pp0_stage1;
reg   [6:0] i_fu_80;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_subdone;
wire    ap_loop_init;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0_local;
wire   [31:0] bitcast_ln758_fu_303_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0_local;
wire   [31:0] bitcast_ln758_2_fu_311_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0_local;
wire   [31:0] bitcast_ln758_4_fu_319_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0_local;
wire   [31:0] bitcast_ln758_6_fu_327_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0_local;
wire   [31:0] bitcast_ln758_1_fu_307_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0_local;
wire   [31:0] bitcast_ln758_3_fu_315_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0_local;
wire   [31:0] bitcast_ln758_5_fu_323_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0_local;
wire   [31:0] bitcast_ln758_7_fu_331_p1;
reg    FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_372;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_80 = 7'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_DIT_RN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_372)) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i_fu_80 <= add_ln757_reg_350;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln757_reg_350 <= add_ln757_fu_208_p2;
        i_2_reg_342 <= i_fu_80;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln758_2_reg_360 <= {{mid_dout[63:32]}};
        trunc_ln758_3_reg_365 <= {{mid_dout[95:64]}};
        trunc_ln758_4_reg_370 <= {{mid_dout[127:96]}};
        trunc_ln758_5_reg_375 <= {{mid_dout[159:128]}};
        trunc_ln758_6_reg_380 <= {{mid_dout[191:160]}};
        trunc_ln758_7_reg_385 <= {{mid_dout[223:192]}};
        trunc_ln758_8_reg_390 <= {{mid_dout[255:224]}};
        trunc_ln758_reg_355 <= trunc_ln758_fu_214_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0_local = 1'b1;
    end else begin
        FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln757_fu_202_p2 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mid_blk_n = mid_empty_n;
    end else begin
        mid_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mid_read = 1'b1;
    end else begin
        mid_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_d0 = bitcast_ln758_fu_303_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_0_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_d0 = bitcast_ln758_2_fu_311_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_1_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_d0 = bitcast_ln758_4_fu_319_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_2_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_d0 = bitcast_ln758_6_fu_327_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_0_3_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_d0 = bitcast_ln758_1_fu_307_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_0_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_d0 = bitcast_ln758_3_fu_315_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_1_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_d0 = bitcast_ln758_5_fu_323_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_2_we0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_address0 = zext_ln757_fu_292_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_ce0_local;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_d0 = bitcast_ln758_7_fu_331_p1;

assign FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0 = FFT_DIT_RN_stream_stream_vector_complex_float_4ul_0_buffer_1_3_we0_local;

assign add_ln757_fu_208_p2 = (i_fu_80 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((mid_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((mid_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_372 = ((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_ready = ap_ready_sig;

assign bitcast_ln758_1_fu_307_p1 = trunc_ln758_2_reg_360;

assign bitcast_ln758_2_fu_311_p1 = trunc_ln758_3_reg_365;

assign bitcast_ln758_3_fu_315_p1 = trunc_ln758_4_reg_370;

assign bitcast_ln758_4_fu_319_p1 = trunc_ln758_5_reg_375;

assign bitcast_ln758_5_fu_323_p1 = trunc_ln758_6_reg_380;

assign bitcast_ln758_6_fu_327_p1 = trunc_ln758_7_reg_385;

assign bitcast_ln758_7_fu_331_p1 = trunc_ln758_8_reg_390;

assign bitcast_ln758_fu_303_p1 = trunc_ln758_reg_355;

assign icmp_ln757_fu_202_p2 = ((i_fu_80 == 7'd64) ? 1'b1 : 1'b0);

assign trunc_ln758_fu_214_p1 = mid_dout[31:0];

assign zext_ln757_fu_292_p1 = i_2_reg_342;

endmodule //FFT_DIT_RN_FFT_DIT_RN_Pipeline_VITIS_LOOP_757_1
