// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FFT_DIT_RN_reverse_input_stream_UF2_Loop_FROM_BLOCK_TO_CYCLIC_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_d0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_q0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_address0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0,
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0;
output  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_d0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_q0;
output  [4:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_address0;
output   reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0;
input  [31:0] reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln279_fu_338_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
reg    ap_loop_exit_ready_delayed;
reg   [4:0] i93_load_reg_718;
wire   [1:0] trunc_ln285_fu_308_p1;
reg   [1:0] trunc_ln285_reg_724;
reg   [1:0] trunc_ln285_reg_724_pp0_iter1_reg;
reg   [1:0] trunc_ln285_reg_724_pp0_iter2_reg;
wire   [4:0] i_fu_312_p2;
reg   [4:0] i_reg_735;
reg   [2:0] tmp_reg_750;
reg   [2:0] tmp_reg_750_pp0_iter1_reg;
reg   [2:0] tmp_reg_750_pp0_iter2_reg;
reg   [2:0] cyclic_offset_2_reg_755;
reg   [2:0] cyclic_offset_2_reg_755_pp0_iter1_reg;
reg   [2:0] cyclic_offset_2_reg_755_pp0_iter2_reg;
reg   [2:0] tmp_1_reg_794;
reg   [2:0] tmp_1_reg_794_pp0_iter2_reg;
reg   [2:0] tmp_2_reg_799;
reg   [2:0] tmp_2_reg_799_pp0_iter2_reg;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804_pp0_iter3_reg;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812_pp0_iter3_reg;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_1_load_reg_820;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_1_load_reg_826;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_2_load_reg_832;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_2_load_reg_838;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_3_load_reg_844;
reg   [31:0] reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_3_load_reg_850;
wire   [31:0] select_ln298_fu_437_p3;
reg   [31:0] select_ln298_reg_856;
wire   [0:0] icmp_ln298_1_fu_444_p2;
reg   [0:0] icmp_ln298_1_reg_861;
wire   [0:0] icmp_ln298_2_fu_449_p2;
reg   [0:0] icmp_ln298_2_reg_873;
wire   [31:0] select_ln298_2_fu_454_p3;
reg   [31:0] select_ln298_2_reg_885;
wire   [31:0] select_ln298_4_fu_461_p3;
reg   [31:0] select_ln298_4_reg_890;
wire   [31:0] select_ln298_6_fu_469_p3;
reg   [31:0] select_ln298_6_reg_895;
wire   [31:0] select_ln298_8_fu_477_p3;
reg   [31:0] select_ln298_8_reg_900;
wire   [31:0] select_ln298_10_fu_485_p3;
reg   [31:0] select_ln298_10_reg_905;
wire   [31:0] select_ln298_12_fu_493_p3;
reg   [31:0] select_ln298_12_reg_910;
wire   [31:0] select_ln298_14_fu_500_p3;
reg   [31:0] select_ln298_14_reg_915;
wire   [4:0] cyclic_offset_3_fu_507_p9;
reg   [4:0] cyclic_offset_3_reg_920;
wire   [4:0] cyclic_offset_4_fu_526_p9;
reg   [4:0] cyclic_offset_4_reg_925;
wire   [4:0] cyclic_offset_5_fu_545_p9;
reg   [4:0] cyclic_offset_5_reg_930;
wire   [4:0] cyclic_offset_6_fu_564_p9;
reg   [4:0] cyclic_offset_6_reg_935;
wire   [63:0] zext_ln279_fu_302_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln292_fu_359_p1;
wire   [63:0] zext_ln292_1_fu_364_p1;
wire   [63:0] zext_ln292_2_fu_370_p1;
wire   [63:0] zext_ln344_fu_691_p1;
wire   [63:0] zext_ln344_1_fu_696_p1;
wire   [63:0] zext_ln344_2_fu_701_p1;
wire   [63:0] zext_ln344_3_fu_706_p1;
reg   [4:0] i93_fu_82;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_i93_load;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0_local;
wire   [31:0] p_0_079_i_fu_600_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0_local;
wire   [31:0] p_0_079_1_i_fu_624_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0_local;
wire   [31:0] p_0_079_2_i_fu_648_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0_local;
wire   [31:0] p_0_079_3_i_fu_672_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0_local;
wire   [31:0] p_0_180_i_fu_612_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0_local;
wire   [31:0] p_0_180_1_i_fu_636_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0_local;
wire   [31:0] p_0_180_2_i_fu_660_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0_local;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0_local;
wire   [31:0] p_0_180_3_i_fu_684_p3;
reg    reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0_local;
wire   [4:0] add_ln285_1_fu_349_p2;
wire   [4:0] add_ln285_2_fu_354_p2;
wire   [3:0] zext_ln306_cast_fu_396_p3;
wire   [3:0] zext_ln306_1_fu_407_p1;
wire   [3:0] cyclic_offset_1_fu_418_p3;
wire   [0:0] icmp_ln298_fu_432_p2;
wire   [4:0] zext_ln304_fu_429_p1;
wire  signed [4:0] sext_ln304_fu_425_p1;
wire   [4:0] cyclic_offset_fu_410_p3;
wire   [4:0] zext_ln306_fu_403_p1;
wire   [31:0] select_ln298_1_fu_595_p3;
wire   [31:0] select_ln298_3_fu_607_p3;
wire   [31:0] select_ln298_5_fu_619_p3;
wire   [31:0] select_ln298_7_fu_631_p3;
wire   [31:0] select_ln298_9_fu_643_p3;
wire   [31:0] select_ln298_11_fu_655_p3;
wire   [31:0] select_ln298_13_fu_667_p3;
wire   [31:0] select_ln298_15_fu_679_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_316;
wire   [1:0] cyclic_offset_3_fu_507_p1;
wire   [1:0] cyclic_offset_3_fu_507_p3;
wire  signed [1:0] cyclic_offset_3_fu_507_p5;
wire   [1:0] cyclic_offset_4_fu_526_p1;
wire   [1:0] cyclic_offset_4_fu_526_p3;
wire  signed [1:0] cyclic_offset_4_fu_526_p5;
wire   [1:0] cyclic_offset_5_fu_545_p1;
wire   [1:0] cyclic_offset_5_fu_545_p3;
wire  signed [1:0] cyclic_offset_5_fu_545_p5;
wire   [1:0] cyclic_offset_6_fu_564_p1;
wire   [1:0] cyclic_offset_6_fu_564_p3;
wire  signed [1:0] cyclic_offset_6_fu_564_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 i93_fu_82 = 5'd0;
end

(* dissolve_hierarchy = "yes" *) FFT_DIT_RN_sparsemux_7_2_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 5 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 5 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 5 ),
    .def_WIDTH( 5 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 5 ))
sparsemux_7_2_5_1_1_U11(
    .din0(zext_ln304_fu_429_p1),
    .din1(sext_ln304_fu_425_p1),
    .din2(cyclic_offset_fu_410_p3),
    .def(zext_ln306_fu_403_p1),
    .sel(trunc_ln285_reg_724_pp0_iter2_reg),
    .dout(cyclic_offset_3_fu_507_p9)
);

(* dissolve_hierarchy = "yes" *) FFT_DIT_RN_sparsemux_7_2_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 5 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 5 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 5 ),
    .def_WIDTH( 5 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 5 ))
sparsemux_7_2_5_1_1_U12(
    .din0(zext_ln306_fu_403_p1),
    .din1(zext_ln304_fu_429_p1),
    .din2(sext_ln304_fu_425_p1),
    .def(cyclic_offset_fu_410_p3),
    .sel(trunc_ln285_reg_724_pp0_iter2_reg),
    .dout(cyclic_offset_4_fu_526_p9)
);

(* dissolve_hierarchy = "yes" *) FFT_DIT_RN_sparsemux_7_2_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 5 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 5 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 5 ),
    .def_WIDTH( 5 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 5 ))
sparsemux_7_2_5_1_1_U13(
    .din0(cyclic_offset_fu_410_p3),
    .din1(zext_ln306_fu_403_p1),
    .din2(zext_ln304_fu_429_p1),
    .def(sext_ln304_fu_425_p1),
    .sel(trunc_ln285_reg_724_pp0_iter2_reg),
    .dout(cyclic_offset_5_fu_545_p9)
);

(* dissolve_hierarchy = "yes" *) FFT_DIT_RN_sparsemux_7_2_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 5 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 5 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 5 ),
    .def_WIDTH( 5 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 5 ))
sparsemux_7_2_5_1_1_U14(
    .din0(sext_ln304_fu_425_p1),
    .din1(cyclic_offset_fu_410_p3),
    .din2(zext_ln306_fu_403_p1),
    .def(zext_ln304_fu_429_p1),
    .sel(trunc_ln285_reg_724_pp0_iter2_reg),
    .dout(cyclic_offset_6_fu_564_p9)
);

FFT_DIT_RN_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_316)) begin
        i93_fu_82 <= i_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cyclic_offset_2_reg_755 <= {{ap_sig_allocacmp_i93_load[4:2]}};
        cyclic_offset_2_reg_755_pp0_iter1_reg <= cyclic_offset_2_reg_755;
        i93_load_reg_718 <= ap_sig_allocacmp_i93_load;
        i_reg_735 <= i_fu_312_p2;
        tmp_1_reg_794 <= {{add_ln285_1_fu_349_p2[4:2]}};
        tmp_2_reg_799 <= {{add_ln285_2_fu_354_p2[4:2]}};
        tmp_reg_750 <= {{i_fu_312_p2[4:2]}};
        tmp_reg_750_pp0_iter1_reg <= tmp_reg_750;
        trunc_ln285_reg_724 <= trunc_ln285_fu_308_p1;
        trunc_ln285_reg_724_pp0_iter1_reg <= trunc_ln285_reg_724;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        cyclic_offset_2_reg_755_pp0_iter2_reg <= cyclic_offset_2_reg_755_pp0_iter1_reg;
        cyclic_offset_3_reg_920 <= cyclic_offset_3_fu_507_p9;
        cyclic_offset_4_reg_925 <= cyclic_offset_4_fu_526_p9;
        cyclic_offset_5_reg_930 <= cyclic_offset_5_fu_545_p9;
        cyclic_offset_6_reg_935 <= cyclic_offset_6_fu_564_p9;
        icmp_ln298_1_reg_861 <= icmp_ln298_1_fu_444_p2;
        icmp_ln298_2_reg_873 <= icmp_ln298_2_fu_449_p2;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804_pp0_iter3_reg <= reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_1_load_reg_820 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_2_load_reg_832 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_3_load_reg_844 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812_pp0_iter3_reg <= reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_1_load_reg_826 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_2_load_reg_838 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_q0;
        reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_3_load_reg_850 <= reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_q0;
        select_ln298_10_reg_905 <= select_ln298_10_fu_485_p3;
        select_ln298_12_reg_910 <= select_ln298_12_fu_493_p3;
        select_ln298_14_reg_915 <= select_ln298_14_fu_500_p3;
        select_ln298_2_reg_885 <= select_ln298_2_fu_454_p3;
        select_ln298_4_reg_890 <= select_ln298_4_fu_461_p3;
        select_ln298_6_reg_895 <= select_ln298_6_fu_469_p3;
        select_ln298_8_reg_900 <= select_ln298_8_fu_477_p3;
        select_ln298_reg_856 <= select_ln298_fu_437_p3;
        tmp_1_reg_794_pp0_iter2_reg <= tmp_1_reg_794;
        tmp_2_reg_799_pp0_iter2_reg <= tmp_2_reg_799;
        tmp_reg_750_pp0_iter2_reg <= tmp_reg_750_pp0_iter1_reg;
        trunc_ln285_reg_724_pp0_iter2_reg <= trunc_ln285_reg_724_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((icmp_ln279_fu_338_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i93_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i93_load = i93_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0_local = 1'b1;
    end else begin
        reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln285_1_fu_349_p2 = (i93_load_reg_718 + 5'd2);

assign add_ln285_2_fu_354_p2 = (i93_load_reg_718 + 5'd3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_condition_316 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign cyclic_offset_1_fu_418_p3 = {{1'd1}, {tmp_2_reg_799_pp0_iter2_reg}};

assign cyclic_offset_fu_410_p3 = {{1'd1}, {zext_ln306_1_fu_407_p1}};

assign i_fu_312_p2 = (ap_sig_allocacmp_i93_load + 5'd1);

assign icmp_ln279_fu_338_p2 = ((ap_sig_allocacmp_i93_load == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln298_1_fu_444_p2 = ((trunc_ln285_reg_724_pp0_iter2_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln298_2_fu_449_p2 = ((trunc_ln285_reg_724_pp0_iter2_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_432_p2 = ((trunc_ln285_reg_724_pp0_iter2_reg == 2'd0) ? 1'b1 : 1'b0);

assign p_0_079_1_i_fu_624_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_3_load_reg_844 : select_ln298_5_fu_619_p3);

assign p_0_079_2_i_fu_648_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804_pp0_iter3_reg : select_ln298_9_fu_643_p3);

assign p_0_079_3_i_fu_672_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_1_load_reg_820 : select_ln298_13_fu_667_p3);

assign p_0_079_i_fu_600_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_2_load_reg_832 : select_ln298_1_fu_595_p3);

assign p_0_180_1_i_fu_636_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_3_load_reg_850 : select_ln298_7_fu_631_p3);

assign p_0_180_2_i_fu_660_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812_pp0_iter3_reg : select_ln298_11_fu_655_p3);

assign p_0_180_3_i_fu_684_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_1_load_reg_826 : select_ln298_15_fu_679_p3);

assign p_0_180_i_fu_612_p3 = ((icmp_ln298_2_reg_873[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_2_load_reg_838 : select_ln298_3_fu_607_p3);

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_address0 = zext_ln344_fu_691_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_d0 = p_0_079_i_fu_600_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_0_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_address0 = zext_ln344_1_fu_696_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_d0 = p_0_079_1_i_fu_624_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_1_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_address0 = zext_ln344_2_fu_701_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_d0 = p_0_079_2_i_fu_648_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_2_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_address0 = zext_ln344_3_fu_706_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_d0 = p_0_079_3_i_fu_672_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_0_3_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_address0 = zext_ln344_fu_691_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_d0 = p_0_180_i_fu_612_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_0_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_address0 = zext_ln344_1_fu_696_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_d0 = p_0_180_1_i_fu_636_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_1_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_address0 = zext_ln344_2_fu_701_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_d0 = p_0_180_2_i_fu_660_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_2_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_address0 = zext_ln344_3_fu_706_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_d0 = p_0_180_3_i_fu_684_p3;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_in_cyclic_1_3_we0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_address0 = zext_ln279_fu_302_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_0_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_address0 = zext_ln292_fu_359_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_address0 = zext_ln292_1_fu_364_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_address0 = zext_ln292_2_fu_370_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_address0 = zext_ln279_fu_302_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_0_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_address0 = zext_ln292_fu_359_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_address0 = zext_ln292_1_fu_364_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_ce0_local;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_address0 = zext_ln292_2_fu_370_p1;

assign reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0 = reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_ce0_local;

assign select_ln298_10_fu_485_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_q0 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_q0);

assign select_ln298_11_fu_655_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_1_load_reg_826 : select_ln298_10_reg_905);

assign select_ln298_12_fu_493_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_q0 : reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804);

assign select_ln298_13_fu_667_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_2_load_reg_832 : select_ln298_12_reg_910);

assign select_ln298_14_fu_500_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_3_q0 : reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812);

assign select_ln298_15_fu_679_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_2_load_reg_838 : select_ln298_14_reg_915);

assign select_ln298_1_fu_595_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_3_load_reg_844 : select_ln298_reg_856);

assign select_ln298_2_fu_454_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_q0);

assign select_ln298_3_fu_607_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_3_load_reg_850 : select_ln298_2_reg_885);

assign select_ln298_4_fu_461_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_q0 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_q0);

assign select_ln298_5_fu_619_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804_pp0_iter3_reg : select_ln298_4_reg_890);

assign select_ln298_6_fu_469_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_1_q0 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_1_2_q0);

assign select_ln298_7_fu_631_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_1_0_load_reg_812_pp0_iter3_reg : select_ln298_6_reg_895);

assign select_ln298_8_fu_477_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_2_q0 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_3_q0);

assign select_ln298_9_fu_643_p3 = ((icmp_ln298_1_reg_861[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_1_load_reg_820 : select_ln298_8_reg_900);

assign select_ln298_fu_437_p3 = ((icmp_ln298_fu_432_p2[0:0] == 1'b1) ? reverse_input_stream_UF2_stream_stream_vector_0_data_rev_stream_0_0_load_reg_804 : reverse_input_stream_UF2_stream_vector_complex_float_4ul_0_stream_vector_complex_float_4ul_0_data_rev_stream_0_1_q0);

assign sext_ln304_fu_425_p1 = $signed(cyclic_offset_1_fu_418_p3);

assign trunc_ln285_fu_308_p1 = ap_sig_allocacmp_i93_load[1:0];

assign zext_ln279_fu_302_p1 = ap_sig_allocacmp_i93_load;

assign zext_ln292_1_fu_364_p1 = add_ln285_1_fu_349_p2;

assign zext_ln292_2_fu_370_p1 = add_ln285_2_fu_354_p2;

assign zext_ln292_fu_359_p1 = i_reg_735;

assign zext_ln304_fu_429_p1 = cyclic_offset_2_reg_755_pp0_iter2_reg;

assign zext_ln306_1_fu_407_p1 = tmp_1_reg_794_pp0_iter2_reg;

assign zext_ln306_cast_fu_396_p3 = {{1'd1}, {tmp_reg_750_pp0_iter2_reg}};

assign zext_ln306_fu_403_p1 = zext_ln306_cast_fu_396_p3;

assign zext_ln344_1_fu_696_p1 = cyclic_offset_4_reg_925;

assign zext_ln344_2_fu_701_p1 = cyclic_offset_5_reg_930;

assign zext_ln344_3_fu_706_p1 = cyclic_offset_6_reg_935;

assign zext_ln344_fu_691_p1 = cyclic_offset_3_reg_920;

endmodule //FFT_DIT_RN_reverse_input_stream_UF2_Loop_FROM_BLOCK_TO_CYCLIC_proc
