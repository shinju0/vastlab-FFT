-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_DIT_RN_output_result_array_to_stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mid_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    mid_full_n : IN STD_LOGIC;
    mid_write : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1 : OUT STD_LOGIC;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of FFT_DIT_RN_output_result_array_to_stream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln56_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_loop_exit_ready_delayed : STD_LOGIC;
    signal mid_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln61_fu_179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_1_fu_195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i45_fu_52 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal i_fu_203_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i45_load : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1_local : STD_LOGIC;
    signal FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0_local : STD_LOGIC;
    signal tmp_fu_171_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln_fu_187_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal bitcast_ln63_7_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_6_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_5_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_4_fu_236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_3_fu_232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_2_fu_228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_1_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln63_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_159 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_DIT_RN_flow_control_loop_delay_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_loop_exit_ready_delayed : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_delay_pipe_U : component FFT_DIT_RN_flow_control_loop_delay_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue,
        ap_loop_exit_ready_delayed => ap_loop_exit_ready_delayed);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    i45_fu_52_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_159)) then
                i45_fu_52 <= i_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_address0 <= zext_ln61_1_fu_195_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_address1 <= zext_ln61_fu_179_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_address0 <= zext_ln61_1_fu_195_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_address1 <= zext_ln61_fu_179_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_address0 <= zext_ln61_1_fu_195_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_address1 <= zext_ln61_fu_179_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_address0 <= zext_ln61_1_fu_195_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_address1 <= zext_ln61_fu_179_p1(6 - 1 downto 0);
    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1_local;

    FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1_local <= ap_const_logic_1;
        else 
            FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state3_pp0_stage0_iter2, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(mid_full_n)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (mid_full_n = ap_const_logic_0);
    end process;


    ap_condition_159_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_159 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln56_fu_209_p2, ap_start_int)
    begin
        if (((icmp_ln56_fu_209_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_loop_exit_ready_delayed_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_loop_exit_ready_delayed <= ap_const_logic_1;
        else 
            ap_loop_exit_ready_delayed <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i45_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i45_fu_52, ap_loop_init, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i45_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i45_load <= i45_fu_52;
        end if; 
    end process;

    bitcast_ln63_1_fu_224_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_q1;
    bitcast_ln63_2_fu_228_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_q1;
    bitcast_ln63_3_fu_232_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_q1;
    bitcast_ln63_4_fu_236_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_q0;
    bitcast_ln63_5_fu_240_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_0_q0;
    bitcast_ln63_6_fu_244_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_1_q0;
    bitcast_ln63_7_fu_248_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_1_1_q0;
    bitcast_ln63_fu_220_p1 <= FFT_DIT_spatial_unroll_CY_stream_vector_stream_stream_vector_0_data_5_0_0_q1;
    i_fu_203_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i45_load) + unsigned(ap_const_lv5_1));
    icmp_ln56_fu_209_p2 <= "1" when (ap_sig_allocacmp_i45_load = ap_const_lv5_1F) else "0";

    mid_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, mid_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            mid_blk_n <= mid_full_n;
        else 
            mid_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mid_din <= (((((((bitcast_ln63_7_fu_248_p1 & bitcast_ln63_6_fu_244_p1) & bitcast_ln63_5_fu_240_p1) & bitcast_ln63_4_fu_236_p1) & bitcast_ln63_3_fu_232_p1) & bitcast_ln63_2_fu_228_p1) & bitcast_ln63_1_fu_224_p1) & bitcast_ln63_fu_220_p1);

    mid_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            mid_write <= ap_const_logic_1;
        else 
            mid_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln_fu_187_p3 <= (ap_sig_allocacmp_i45_load & ap_const_lv1_1);
    tmp_fu_171_p3 <= (ap_sig_allocacmp_i45_load & ap_const_lv1_0);
    zext_ln61_1_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_187_p3),64));
    zext_ln61_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_171_p3),64));
end behav;
